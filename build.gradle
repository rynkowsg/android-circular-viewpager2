/*
 * Copyright 2020 Two Buffers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import twobuffers.buildsrc.Libs
import twobuffers.buildsrc.Versions

buildscript {
    ext.buildConfig = [
            'compileSdk': 29,
            'minSdk'    : 21,
            'targetSdk' : 29,
            'buildTools': "29.0.2",
    ]
    repositories {
        mavenLocal()
        google()
        jcenter()
    }
    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath Libs.AndroidX.Navigation.safeArgsGradlePlugin
        classpath Libs.dexcountGradlePlugin
        classpath Libs.spotlessGradlePlugin
    }
}

plugins {
    id 'com.github.ben-manes.versions' version "0.28.0"
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    }
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            jvmTarget = Versions.JAVA_VERSION_STR

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
            // Enable kotlin.Result
            freeCompilerArgs += "-Xallow-result-return-type"
        }
    }
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint(Versions.ktlint)
            licenseHeaderFile(project.rootProject.file('spotless/copyright.txt'))
            endWithNewline()
        }
        kotlinGradle {
            ktlint(Versions.ktlint)
            endWithNewline()
        }
        format 'misc', {
            target '**/.gitignore', '**/*.gradle', '**/*.md', '**/*.sh'
            indentWithTabs()
            trimTrailingWhitespace()
            endWithNewline()
        }
    }
}
